// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ReactiveServices.Application.Launching.Tests.Specifications
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Lançar aplicativos solicitados pelo script de bootstrap")]
    public partial class LancarAplicativosSolicitadosPeloScriptDeBootstrapFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "LançarAplicativosSolicitadosPeloScriptDeBootstrap.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Lançar aplicativos solicitados pelo script de bootstrap", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Lançar um aplicativo solicitado por um script de bootstrap")]
        [NUnit.Framework.CategoryAttribute("stable")]
        [NUnit.Framework.CategoryAttribute("fast")]
        public virtual void LancarUmAplicativoSolicitadoPorUmScriptDeBootstrap()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Lançar um aplicativo solicitado por um script de bootstrap", new string[] {
                        "stable",
                        "fast"});
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("que tenha sido solicitada a execução de um aplicativo válido como aplicativo de b" +
                    "oostrap", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 8
 testRunner.When("a execução do aplicativo for solicitada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 9
 testRunner.Then("uma mensagem vinda deste aplicativo deve ser recebida", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Lançar aplicativos solicitados pelo script de bootstrap")]
        [NUnit.Framework.CategoryAttribute("stable")]
        [NUnit.Framework.CategoryAttribute("fast")]
        public virtual void LancarAplicativosSolicitadosPeloScriptDeBootstrap()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Lançar aplicativos solicitados pelo script de bootstrap", new string[] {
                        "stable",
                        "fast"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
 testRunner.Given("que tenha sido informado um script de bootstrap válido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 14
 testRunner.When("o script de bootstrap for executado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 15
 testRunner.Then("os aplicativos que tal script solitita devem ser executados", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Disparar um solicitação de trabalho solicitadas pelo script de boostrap")]
        [NUnit.Framework.CategoryAttribute("stable")]
        [NUnit.Framework.CategoryAttribute("fast")]
        public virtual void DispararUmSolicitacaoDeTrabalhoSolicitadasPeloScriptDeBoostrap()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Disparar um solicitação de trabalho solicitadas pelo script de boostrap", new string[] {
                        "stable",
                        "fast"});
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.Given("que tenha sido informado um script de bootstrap válido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 20
 testRunner.And("que este script tenha apenas uma solicitação de trabalho", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 21
 testRunner.When("o script de bootstrap for executado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 22
 testRunner.Then("as solicitações de trabalho que tal script solitita devem ser executadas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Disparar duas solicitações de trabalho solicitadas pelo script de boostrap")]
        [NUnit.Framework.CategoryAttribute("stable")]
        [NUnit.Framework.CategoryAttribute("fast")]
        public virtual void DispararDuasSolicitacoesDeTrabalhoSolicitadasPeloScriptDeBoostrap()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Disparar duas solicitações de trabalho solicitadas pelo script de boostrap", new string[] {
                        "stable",
                        "fast"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
 testRunner.Given("que tenha sido informado um script de bootstrap válido para duas solicitações do " +
                    "mesmo tipo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 27
 testRunner.When("o script de bootstrap for executado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 28
 testRunner.Then("as solicitações de trabalho que tal script solitita devem ser executadas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
