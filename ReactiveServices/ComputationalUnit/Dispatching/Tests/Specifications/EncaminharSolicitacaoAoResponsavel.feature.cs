// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ReactiveServices.ComputationalUnit.Dispatching.Tests.Specifications
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Encaminhar solicitacoes para o responsável")]
    public partial class EncaminharSolicitacoesParaOResponsavelFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EncaminharSolicitacaoAoResponsavel.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Encaminhar solicitacoes para o responsável", "De modo a ter uma solicitação de trabalho processada\nComo um despachante de traba" +
                    "lhos\nEu quero encaminhar as solicitações de trabalho aos responsáveis pelo proce" +
                    "ssamento", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Encaminhar uma solicitação de trabalho de um determinado tipo")]
        [NUnit.Framework.CategoryAttribute("stable")]
        [NUnit.Framework.CategoryAttribute("TO_REMOVE_ConfigureAndIntializeDispatcher")]
        public virtual void EncaminharUmaSolicitacaoDeTrabalhoDeUmDeterminadoTipo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Encaminhar uma solicitação de trabalho de um determinado tipo", new string[] {
                        "stable",
                        "TO_REMOVE_ConfigureAndIntializeDispatcher"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("que o despachante de trabalhos tenha sido configurado para encaminhar mensagens d" +
                    "o tipo A para um dado responsável", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 12
 testRunner.And("que a solicitação de trabalho precise de 10 segundos para ser concluída", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 13
 testRunner.And("que a solicitação de trabalho tenha sido marcada como em andamento há 1 segundos " +
                    "atrás", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 14
 testRunner.When("o despachante de trabalhos for inicializado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 15
 testRunner.And("uma solicitação de trabalho do tipo A for recebida pelo despachante de trabalhos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 16
 testRunner.Then("o despachante deve configurar o tempo máximo de execução na solicitação de trabal" +
                    "ho", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line 17
 testRunner.And("o despachante deve se inscrever para receber uma notificação de conclusão de exec" +
                    "ução da solicitação", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 18
 testRunner.And("o despachante deve enviar a solicitação de trabalho para o responsável por sua ex" +
                    "ecução", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
