// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ReactiveServices.ComputationalUnit.Dispatching.Tests.Specifications
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Configurar recebimento de solicitações de trabalho pendentes")]
    public partial class ConfigurarRecebimentoDeSolicitacoesDeTrabalhoPendentesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ConfigurarRecebimentoDeSolicitacoes.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Configurar recebimento de solicitações de trabalho pendentes", "De modo a ser capaz de encaminhar trabalhos para serem processados\nComo um despac" +
                    "hante de trabalhos\nEu quero me configurar para receber as solicitações de trabal" +
                    "ho pendentes conforme indicado nos parametros que me forem passados", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Se configurar para receber mensagens de um dado tipo com sucesso")]
        [NUnit.Framework.CategoryAttribute("stable")]
        [NUnit.Framework.CategoryAttribute("TO_REMOVE_ConfigureAndIntializeDispatcher")]
        public virtual void SeConfigurarParaReceberMensagensDeUmDadoTipoComSucesso()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Se configurar para receber mensagens de um dado tipo com sucesso", new string[] {
                        "stable",
                        "TO_REMOVE_ConfigureAndIntializeDispatcher"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("que tenham sido informados parametros corretos de configuração solicitando o rece" +
                    "bimento de solicitações de trabalho do tipo A", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 12
 testRunner.When("o despachante de trabalhos for inicializado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 13
 testRunner.Then("o despachante é capaz de interpretar as configurações de recebimento informadas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line 14
 testRunner.And("o despachante se inscreve para receber solicitações de trabalho pendentes do tipo" +
                    " A", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Se configurar para receber mensagens de um dado tipo com configuração inválida")]
        [NUnit.Framework.CategoryAttribute("stable")]
        [NUnit.Framework.CategoryAttribute("TO_REMOVE_ConfigureAndIntializeDispatcher")]
        public virtual void SeConfigurarParaReceberMensagensDeUmDadoTipoComConfiguracaoInvalida()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Se configurar para receber mensagens de um dado tipo com configuração inválida", new string[] {
                        "stable",
                        "TO_REMOVE_ConfigureAndIntializeDispatcher"});
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.Given("que tenham sido informados parametros incorretos de configuração solicitando o re" +
                    "cebimento de solicitações de trabalho do tipo A", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 20
 testRunner.When("o despachante de trabalhos for inicializado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 21
 testRunner.Then("o despachante não é capaz de interpretar as configurações de recebimento informad" +
                    "as", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line 22
 testRunner.And("o despachante não se inscreve para receber solicitações de trabalho pendentes do " +
                    "tipo A", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 23
 testRunner.And("o despachante deve mostrar uma mensagem de erro do tipo InvalidOperationException" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
